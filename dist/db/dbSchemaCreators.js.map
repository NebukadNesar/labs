{"version":3,"sources":["../../src/db/dbSchemaCreators.js"],"names":["connect","db","connection","on","console","error","bind","once","log","serverSchema","Schema","serverName","String","serverLocation","type","required","serverIp","unique","serialNumber","relatedGroup","relatedProject","serverEndDate","Date","serverAdmin","serverPasswd","adminSchema","username","password","Server","model","Admin","module","exports"],"mappings":";;AAIA;;;;;;AAEA;AACA,mBAASA,OAAT,CAAiB,sCAAjB,E,CAPA;;;;;;AASA,IAAIC,KAAK,mBAASC,UAAlB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,GAAGM,IAAH,CAAQ,MAAR,EAAgB,YAAM;AAAEH,UAAQI,GAAR,CAAY,oCAAZ;AAAoD,CAA5E;;AAEA,IAAIC,eAAe,IAAI,mBAASC,MAAb,CAAoB;AACrCC,cAAYC,MADyB;AAErCC,kBAAe,EAAEC,MAAMF,MAAR,EAAgBG,UAAU,IAA1B,EAFsB;AAGrCC,YAAe,EAAEF,MAAMF,MAAR,EAAgBG,UAAU,IAA1B,EAAgCE,QAAQ,IAAxC,EAHsB;AAIrCC,gBAAeN,MAJsB;AAKrCO,gBAAeP,MALsB;AAMrCQ,kBAAeR,MANsB;AAOrCS,iBAAeC,IAPsB;AAQrCC,eAAe,EAAET,MAAMF,MAAR,EARsB;AASrCY,gBAAe,EAAEV,MAAMF,MAAR;AATsB,CAApB,CAAnB;;AAYA,IAAIa,cAAc,IAAI,mBAASf,MAAb,CAAoB;AACpCgB,YAAU,EAAEZ,MAAMF,MAAR,EAAgBG,UAAU,IAA1B,EAAgCE,QAAQ,IAAxC,EAD0B;AAEpCU,YAAU,EAAEb,MAAMF,MAAR,EAAgBG,UAAU,IAA1B;AAF0B,CAApB,CAAlB;;AAMA,IAAIa,SAAS,mBAASC,KAAT,CAAe,SAAf,EAA0BpB,YAA1B,CAAb;AACA,IAAIqB,QAAQ,mBAASD,KAAT,CAAe,eAAf,EAAgCJ,WAAhC,CAAZ;;AAEA;;AAGA;AACAM,OAAOC,OAAP,GAAiB;AACfJ,UAAOA,MADQ;AAEfE,SAAMA;AAFS,CAAjB","file":"dbSchemaCreators.js","sourcesContent":["/**\n* @auther:burhanc\n* db schema creation\n**/\nimport mongoose from 'mongoose'\n\n/******* connection to mongo db settings *******/\nmongoose.connect(\"mongodb://localhost/serverManagement\");\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', () => { console.log(\"mongo db connection established...\"); });\n\nvar serverSchema = new mongoose.Schema({\n  serverName: String,\n  serverLocation:{ type: String, required: true},\n  serverIp:      { type: String, required: true, unique: true },\n  serialNumber:  String,\n  relatedGroup:  String,\n  relatedProject:String,\n  serverEndDate: Date,\n  serverAdmin:   { type: String},\n  serverPasswd:  { type: String}\n});\n\nvar adminSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true}\n});\n\n\nvar Server = mongoose.model('servers', serverSchema);\nvar Admin = mongoose.model(\"adminaccounts\", adminSchema);\n\n/****** connection to mongo db settings *******/\n\n\n//export schema models\nmodule.exports = {\n  Server:Server,\n  Admin:Admin\n}\n"]}